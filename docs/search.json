[{"path":"https://haotian-zhuang.github.io/ctSVG/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ctSVG authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Apply ctSVG to Visium HD data","text":"demonstrate use ctSVG generate single-cell gene expression profiles identify cell-type-specific SVGs Visium HD data. Visium HD dataset mouse brain tissue downloaded 10x website. analyzing Visium HD data, ctSVG requires two inputs: 10x Space Ranger outputs, nuclei segmentation results.","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"nuclei-segmentation","dir":"Articles","previous_headings":"","what":"Nuclei segmentation","title":"Apply ctSVG to Visium HD data","text":"nuclei segmentation results can obtained running segmentation methods, StarDist, H&E images accompanying Visium HD data. , microscope image mouse brain tissue downloaded 10x website.","code":"import pandas as pd import numpy as np from tifffile import imread, imwrite from csbdeep.utils import normalize from stardist.models import StarDist2D  img = imread('Visium_HD_Mouse_Brain_tissue_image.tif')  # Load the pretrained model model = StarDist2D.from_pretrained('2D_versatile_he')  # Percentile normalization of the image min_percentile = 5 max_percentile = 95 img = normalize(img, min_percentile, max_percentile)  # Stardist labels, polys = model.predict_instances_big(img, axes='YXC', block_size=4096, prob_thresh=0.01,nms_thresh=0.001, min_overlap=128, context=128, normalizer=None, n_tiles=(4,4,1))  # Convert data format data = [(cell_id, x, y) for cell_id, (xs, ys) in enumerate(polys['coord']) for x, y in zip(xs, ys)] df = pd.DataFrame(data, columns=['Cell', 'X', 'Y'])  df.to_csv('nuclei.csv', index=False)"},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"load-packages-and-datasets","dir":"Articles","previous_headings":"","what":"Load packages and datasets","title":"Apply ctSVG to Visium HD data","text":"","code":"library(ctSVG) mydir <- \"~/Desktop/Research/ctSVG/mouse_brain\" list.files(mydir) #> [1] \"binned_outputs\" \"nuclei.csv\""},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"assign-each-square-to-a-cell","dir":"Articles","previous_headings":"","what":"Assign each square to a cell","title":"Apply ctSVG to Visium HD data","text":"","code":"suppressMessages(suppressWarnings(   cellassignRes <- cellassign(visiumpath = file.path(mydir, \"binned_outputs/square_002um\"),                               segmentationpath = file.path(mydir, \"nuclei.csv\")) )) str(cellassignRes) #> List of 2 #>  $ assign: Named chr [1:1858547] \"Cell:21001\" \"Cell:21001\" \"Cell:21001\" \"Cell:21001\" ... #>   ..- attr(*, \"names\")= chr [1:1858547] \"s_002um_00029_00776-1\" \"s_002um_00029_00777-1\" \"s_002um_00029_00778-1\" \"s_002um_00029_00779-1\" ... #>  $ coord : num [1:82357, 1:2] 355 365 363 364 362 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:82357] \"Cell:21001\" \"Cell:29526\" \"Cell:19243\" \"Cell:31821\" ... #>   .. ..$ : chr [1:2] \"row\" \"col\" coord <- cellassignRes$coord"},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"generate-single-cell-gene-expression-profiles","dir":"Articles","previous_headings":"","what":"Generate single-cell gene expression profiles","title":"Apply ctSVG to Visium HD data","text":"","code":"count <- getexpr(cellassignRes = cellassignRes,                  visiumpath = file.path(mydir, \"binned_outputs/square_002um\")) str(count) #> Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:33493039] 42 109 198 243 291 364 561 627 744 763 ... #>   ..@ p       : int [1:82358] 0 233 265 373 416 436 476 510 623 694 ... #>   ..@ Dim     : int [1:2] 19059 82357 #>   ..@ Dimnames:List of 2 #>   .. ..$ : chr [1:19059] \"Xkr4\" \"Rp1\" \"Sox17\" \"Lypla1\" ... #>   .. ..$ : chr [1:82357] \"Cell:21001\" \"Cell:29526\" \"Cell:19243\" \"Cell:31821\" ... #>   ..@ x       : num [1:33493039] 1 1 2 1 5 1 1 1 3 1 ... #>   ..@ factors : list()"},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"run-seurat-pipeline","dir":"Articles","previous_headings":"","what":"Run Seurat pipeline","title":"Apply ctSVG to Visium HD data","text":"","code":"suppressMessages(suppressWarnings(   d <- runseurat(count = count) ))"},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"reassign-cells-to-clusters","dir":"Articles","previous_headings":"","what":"Reassign cells to clusters","title":"Apply ctSVG to Visium HD data","text":"vignette, n.max set 200 reduce computational time. default, n.max set 1,000 practice.","code":"recluRes <- recluster(d = d, n.max = 200) names(recluRes) #> [1] \"jac.mat\"  \"clu.list\""},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"identify-spatially-variable-genes-within-each-cell-cluster","dir":"Articles","previous_headings":"","what":"Identify spatially variable genes within each cell cluster","title":"Apply ctSVG to Visium HD data","text":"","code":"suppressMessages(suppressWarnings(   clutestRes <- ctsvg_test(d = d, coord = coord,                            clu.list = recluRes$clu.list,                            jac.mat = recluRes$jac.mat) )) head(clutestRes) #>           cluster    gene           fdr          pval fdr.empirical #> 0.C1ql3         0   C1ql3 1.557701e-293 1.535740e-297    0.05422556 #> 0.Snap25        0  Snap25 1.021168e-212 2.013542e-216    0.05422556 #> 0.Rab3c         0   Rab3c 1.371994e-184 4.057955e-188    0.05422556 #> 0.Nptxr         0   Nptxr 8.103704e-171 3.195782e-174    0.05422556 #> 0.Cyp26b1       0 Cyp26b1 1.441156e-165 7.104190e-169    0.05422556 #> 0.Man1a         0   Man1a 3.105247e-144 1.836881e-147    0.05422556 #>           pval.empirical fstat.ori #> 0.C1ql3       0.00990099  78.98951 #> 0.Snap25      0.00990099  65.73079 #> 0.Rab3c       0.00990099  50.76282 #> 0.Nptxr       0.00990099  46.25440 #> 0.Cyp26b1     0.00990099  79.04013 #> 0.Man1a       0.00990099  41.00661"},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"fit-spatial-gene-expression-patterns-within-each-cell-cluster","dir":"Articles","previous_headings":"","what":"Fit spatial gene expression patterns within each cell cluster","title":"Apply ctSVG to Visium HD data","text":"","code":"clufitRes <- ctsvg_fit(d = d, coord = coord)"},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"visualize-spatial-patterns-of-a-single-gene","dir":"Articles","previous_headings":"","what":"Visualize spatial patterns of a single gene","title":"Apply ctSVG to Visium HD data","text":"","code":"plotGene(d = d, clufitRes = clufitRes, coord = coord, gene = clutestRes$gene[1],          cluster = \"0\", background = TRUE)"},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"identify-gene-modules-within-each-cell-cluster","dir":"Articles","previous_headings":"","what":"Identify gene modules within each cell cluster","title":"Apply ctSVG to Visium HD data","text":"","code":"moduleRes <- ctsvg_module(d = d, clutestRes = clutestRes, clufitRes = clufitRes)"},{"path":"https://haotian-zhuang.github.io/ctSVG/articles/Visium HD.html","id":"visualize-spatial-patterns-of-metagenes-within-a-cell-cluster","dir":"Articles","previous_headings":"","what":"Visualize spatial patterns of metagenes within a cell cluster","title":"Apply ctSVG to Visium HD data","text":"","code":"plotMetagene(d = d, clufitRes = clufitRes, moduleRes = moduleRes, coord = coord,              cluster = \"0\", background = TRUE) sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: aarch64-apple-darwin20 #> Running under: macOS 15.0.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/New_York #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ctSVG_1.0 #>  #> loaded via a namespace (and not attached): #>   [1] RColorBrewer_1.1-3     rstudioapi_0.16.0      jsonlite_1.8.8         #>   [4] magrittr_2.0.3         spatstat.utils_3.1-0   farver_2.1.2           #>   [7] rmarkdown_2.28         zlibbioc_1.50.0        fs_1.6.4               #>  [10] ragg_1.3.2             vctrs_0.6.5            ROCR_1.0-11            #>  [13] spatstat.explore_3.3-2 S4Arrays_1.4.1         htmltools_0.5.8.1      #>  [16] findPC_1.0             SparseArray_1.4.8      sass_0.4.9             #>  [19] sctransform_0.4.1      parallelly_1.38.0      KernSmooth_2.23-24     #>  [22] bslib_0.8.0            htmlwidgets_1.6.4      desc_1.4.3             #>  [25] ica_1.0-3              plyr_1.8.9             plotly_4.10.4          #>  [28] zoo_1.8-12             cachem_1.1.0           igraph_2.0.3           #>  [31] mime_0.12              lifecycle_1.0.4        pkgconfig_2.0.3        #>  [34] Matrix_1.7-0           R6_2.5.1               fastmap_1.2.0          #>  [37] MatrixGenerics_1.16.0  fitdistrplus_1.2-1     future_1.34.0          #>  [40] shiny_1.9.1            digest_0.6.37          colorspace_2.1-1       #>  [43] S4Vectors_0.42.1       patchwork_1.3.0        Seurat_5.1.0           #>  [46] tensor_1.5             RSpectra_0.16-2        irlba_2.3.5.1          #>  [49] textshaping_0.4.0      labeling_0.4.3         progressr_0.14.0       #>  [52] fansi_1.0.6            spatstat.sparse_3.1-0  httr_1.4.7             #>  [55] polyclip_1.10-7        abind_1.4-8            compiler_4.4.1         #>  [58] proxy_0.4-27           withr_3.0.1            bit64_4.5.2            #>  [61] DBI_1.2.3              fastDummies_1.7.4      highr_0.11             #>  [64] MASS_7.3-60.2          rjson_0.2.23           classInt_0.4-10        #>  [67] units_0.8-5            tools_4.4.1            lmtest_0.9-40          #>  [70] httpuv_1.6.15          future.apply_1.11.2    goftest_1.2-3          #>  [73] glue_1.7.0             nlme_3.1-164           promises_1.3.0         #>  [76] grid_4.4.1             sf_1.0-18              Rtsne_0.17             #>  [79] cluster_2.1.6          reshape2_1.4.4         generics_0.1.3         #>  [82] hdf5r_1.3.11           gtable_0.3.5           spatstat.data_3.1-2    #>  [85] class_7.3-22           tidyr_1.3.1            data.table_1.16.2      #>  [88] XVector_0.44.0         sp_2.1-4               utf8_1.2.4             #>  [91] BiocGenerics_0.50.0    spatstat.geom_3.3-3    RcppAnnoy_0.0.22       #>  [94] ggrepel_0.9.6          RANN_2.6.2             pillar_1.9.0           #>  [97] stringr_1.5.1          spam_2.11-0            RcppHNSW_0.6.0         #> [100] later_1.3.2            splines_4.4.1          dplyr_1.1.4            #> [103] lattice_0.22-6         bit_4.5.0              survival_3.6-4         #> [106] deldir_2.0-4           tidyselect_1.2.1       miniUI_0.1.1.1         #> [109] pbapply_1.7-2          knitr_1.48             gridExtra_2.3          #> [112] IRanges_2.38.1         scattermore_1.2        stats4_4.4.1           #> [115] xfun_0.47              matrixStats_1.3.0      stringi_1.8.4          #> [118] lazyeval_0.2.2         yaml_2.3.10            evaluate_0.24.0        #> [121] codetools_0.2-20       tibble_3.2.1           cli_3.6.3              #> [124] uwot_0.2.2             arrow_17.0.0.1         xtable_1.8-4           #> [127] reticulate_1.39.0      systemfonts_1.1.0      munsell_0.5.1          #> [130] jquerylib_0.1.4        Rcpp_1.0.13            globals_0.16.3         #> [133] spatstat.random_3.3-2  png_0.1-8              spatstat.univar_3.0-1  #> [136] parallel_4.4.1         assertthat_0.2.1       pkgdown_2.1.0          #> [139] ggplot2_3.5.1          dotCall64_1.2          listenv_0.9.1          #> [142] viridisLite_0.4.2      e1071_1.7-16           scales_1.3.0           #> [145] ggridges_0.5.6         crayon_1.5.3           SeuratObject_5.0.2     #> [148] leiden_0.4.3.1         purrr_1.0.2            rlang_1.1.4            #> [151] cowplot_1.1.3"},{"path":"https://haotian-zhuang.github.io/ctSVG/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Haotian Zhuang. Author, maintainer. Zhicheng Ji. Author.","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhuang H, Ji Z (2024). ctSVG: Identification cell-type-specific SVGs. R package version 1.0, https://github.com/haotian-zhuang/ctSVG, https://haotian-zhuang.github.io/ctSVG/.","code":"@Manual{,   title = {ctSVG: Identification of cell-type-specific SVGs},   author = {Haotian Zhuang and Zhicheng Ji},   year = {2024},   note = {R package version 1.0, https://github.com/haotian-zhuang/ctSVG},   url = {https://haotian-zhuang.github.io/ctSVG/}, }"},{"path":"https://haotian-zhuang.github.io/ctSVG/index.html","id":"ctsvg","dir":"","previous_headings":"","what":"Identification of cell-type-specific SVGs","title":"Identification of cell-type-specific SVGs","text":"10x Visium HD provides expression profiles whole transcriptome single cell-scale resolution. R package ctSVG implements computational method extract single-cell gene expression profiles Visium HD data identify cell-type-specific SVGs.","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identification of cell-type-specific SVGs","text":"install latest version R package GitHub, please run following commands R: Set environment variable install R package arrow Linux. information available website.","code":"Sys.setenv(\"LIBARROW_MINIMAL\" = FALSE) if (!require(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\") BiocManager::install(\"SparseArray\")  if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"haotian-zhuang/findPC\") devtools::install_github(\"haotian-zhuang/ctSVG\")"},{"path":"https://haotian-zhuang.github.io/ctSVG/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Identification of cell-type-specific SVGs","text":"Detailed vignettes available website.","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Identification of cell-type-specific SVGs","text":"Please cite following paper: submitted","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Identification of cell-type-specific SVGs","text":"Authors: Haotian Zhuang, Zhicheng Ji Report bugs provide suggestions sending email : Maintainer: Haotian Zhuang (haotian.zhuang@duke.edu) open new issue GitHub page","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/cellassign.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign each square to a cell — cellassign","title":"Assign each square to a cell — cellassign","text":"Assign square cell","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/cellassign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign each square to a cell — cellassign","text":"","code":"cellassign(visiumpath, segmentationpath, cellnucratio = 2)"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/cellassign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign each square to a cell — cellassign","text":"visiumpath path Visium HD output folder segmentationpath path StarDist segmentation file cellnucratio ratio cell size nucleus size (2 default)","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/cellassign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign each square to a cell — cellassign","text":"list including vector indicating cell square belongs , matrix spatial locations","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit spatial gene expression patterns within each cell cluster — ctsvg_fit","title":"Fit spatial gene expression patterns within each cell cluster — ctsvg_fit","text":"Fit spatial gene expression patterns within cell cluster","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit spatial gene expression patterns within each cell cluster — ctsvg_fit","text":"","code":"ctsvg_fit(d, coord, cell.filter = TRUE)"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit spatial gene expression patterns within each cell cluster — ctsvg_fit","text":"d output runseurat coord matrix spatial locations cellassign cell.filter Whether remove spatially isolated cells within cell cluster (TRUE default)","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit spatial gene expression patterns within each cell cluster — ctsvg_fit","text":"fitted cell-cluster-specific gene expression matrix","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify gene modules within each cell cluster — ctsvg_module","title":"Identify gene modules within each cell cluster — ctsvg_module","text":"Identify gene modules within cell cluster","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify gene modules within each cell cluster — ctsvg_module","text":"","code":"ctsvg_module(d, clutestRes, clufitRes, seed = 2024, clunum = NULL)"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify gene modules within each cell cluster — ctsvg_module","text":"d output runseurat clutestRes output ctsvg_test clufitRes output ctsvg_fit seed Random seed k-means clustering (2024 default) clunum Number modules (NULL default, automatically selected)","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify gene modules within each cell cluster — ctsvg_module","text":"list element representing cell cluster indicating module gene belongs ","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify spatially variable genes within each cell cluster — ctsvg_test","title":"Identify spatially variable genes within each cell cluster — ctsvg_test","text":"Identify spatially variable genes within cell cluster","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify spatially variable genes within each cell cluster — ctsvg_test","text":"","code":"ctsvg_test(   d,   coord,   cell.filter = TRUE,   clu.list = NULL,   jac.mat = NULL,   min.cells = 0.01,   seed = 2024,   verbose = FALSE,   n.permute = 100 )"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify spatially variable genes within each cell cluster — ctsvg_test","text":"d output runseurat coord matrix spatial locations cellassign cell.filter Whether remove spatially isolated cells within cell cluster (TRUE default) clu.list list reassigned clusters recluster jac.mat matrix Jaccard indices recluster min.cells minimum proportion cells within cell cluster gene expressed retained (0.01 default) seed Random seed permutation (2024 default) verbose Whether print cell cluster progress (FALSE default) n.permute Number permutation times (reassigned clusters highest Jaccard indices, 100 default)","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/ctsvg_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify spatially variable genes within each cell cluster — ctsvg_test","text":"data frame p-values FDRs gene cell cluster","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/getexpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate single-cell gene expression profiles — getexpr","title":"Generate single-cell gene expression profiles — getexpr","text":"Generate single-cell gene expression profiles","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/getexpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate single-cell gene expression profiles — getexpr","text":"","code":"getexpr(cellassignRes, visiumpath)"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/getexpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate single-cell gene expression profiles — getexpr","text":"cellassignRes output cellassign visiumpath path Visium HD output folder","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/getexpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate single-cell gene expression profiles — getexpr","text":"single-cell gene expression count matrix","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/plotGene.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize spatial patterns of a single gene — plotGene","title":"Visualize spatial patterns of a single gene — plotGene","text":"Visualize spatial patterns single gene","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/plotGene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize spatial patterns of a single gene — plotGene","text":"","code":"plotGene(   d,   clufitRes = NULL,   coord,   gene,   cluster = NULL,   background = FALSE,   ... )"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/plotGene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize spatial patterns of a single gene — plotGene","text":"d output runseurat clufitRes output ctsvg_fit (NULL default, original gene expression matrix) coord matrix spatial locations cellassign gene gene plot cluster character value indicating cell cluster plot (NULL default, cells) background Whether plot cells (FALSE default) ... parameters geom_point(...) function","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/plotGene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize spatial patterns of a single gene — plotGene","text":"ggplot2 plot","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/plotMetagene.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize spatial patterns of metagenes within a cell cluster — plotMetagene","title":"Visualize spatial patterns of metagenes within a cell cluster — plotMetagene","text":"Visualize spatial patterns metagenes within cell cluster","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/plotMetagene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize spatial patterns of metagenes within a cell cluster — plotMetagene","text":"","code":"plotMetagene(d, clufitRes, moduleRes, coord, cluster, background = FALSE, ...)"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/plotMetagene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize spatial patterns of metagenes within a cell cluster — plotMetagene","text":"d output runseurat clufitRes output ctsvg_fit moduleRes output ctsvg_module coord matrix spatial locations cellassign cluster character value indicating cell cluster plot background Whether plot cells (FALSE default) ... parameters geom_point(...) function","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/plotMetagene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize spatial patterns of metagenes within a cell cluster — plotMetagene","text":"ggplot2 plot","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/recluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Reassign cells to clusters — recluster","title":"Reassign cells to clusters — recluster","text":"Reassign cells clusters","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/recluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reassign cells to clusters — recluster","text":"","code":"recluster(d, n.max = 1000, resolution = 1.2)"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/recluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reassign cells to clusters — recluster","text":"d output runseurat n.max Number reclustering times resolution parameter used runseurat (1.2 default)","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/recluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reassign cells to clusters — recluster","text":"list including matrix Jaccard indices, list reassigned clusters","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/runseurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Seurat pipeline — runseurat","title":"Run Seurat pipeline — runseurat","text":"Run Seurat pipeline","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/runseurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Seurat pipeline — runseurat","text":"","code":"runseurat(   count,   min.genes = 300,   min.cells = 0.01,   npcs = 10,   resolution = 1.2 )"},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/runseurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Seurat pipeline — runseurat","text":"count output getexpr min.genes minimum number genes expressed cell retained (300 default) min.cells minimum proportion cells gene expressed retained (0.01 default) npcs Number PCs use (10 default) resolution parameter FindClusters function (1.2 default)","code":""},{"path":"https://haotian-zhuang.github.io/ctSVG/reference/runseurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Seurat pipeline — runseurat","text":"Seurat object cell clustering results","code":""}]
